@startuml
scale 2048 width
scale 2048 height
left to right direction

class Розпізновач {
    void doStaff()
}

class МетодФасад{
   {static}   +Метод створитиМетод(ТипМетоду типМетоду, ТипСкелету типСкелету)
}

interface НейронаМережеваФабрика {
    НейроноМережевийМетод створитиRNN()
    НейроноМережевийМетод створитиTGCN()
    НейроноМережевийМетод  створитиGRU()
}


interface Метод {
    boolean зброс();
    int тренувати(тренувальнаКолекція,  тестоваКолекція);
    ВихіднийСигнал розпізнати(ВхіднийСигнал вхіднийСигнал)
}
abstract class НейроноМережевийМетод {

}



class ВихіднийСигнал {

}

НейронаМережеваФабрика   --o  МетодФасад

НейронаМережаФабрикаТількиРукиImpl --|> НейронаМережеваФабрика
НейронаМережаФабрикаРукиТаГоловаImpl --|> НейронаМережеваФабрика
НейронаМережаФабрикаВсеТілоImpl --|> НейронаМережеваФабрика



Метод <|-- НейроноМережевийМетод
Метод <|-- СтохастичнийМетод

НейронаМережаФабрикаВсеТілоImpl  <.. "аноімна реалізація GRU" " :НейроноМережевийМетод"
НейронаМережаФабрикаВсеТілоImpl <..  "аноімна реалізація RNN" "  :НейроноМережевийМетод"
НейронаМережаФабрикаВсеТілоImpl <..   "аноімна реалізація TGCN" ":НейроноМережевийМетод"





Розпізновач "Викликає створення модели" --> МетодФасад
МетодФасад <.. SkeletonType
МетодФасад <.. ТипМетоду
Метод <.. ВхіднийСигнал
Метод ..> ВихіднийСигнал
Метод --o Розпізновач
Метод ..> МетодФасад: формуєтся у
enum ТипМетоду {
TGCN,
RNN,
GRU,
MARKOV
}

enum SkeletonType {
  HANDS,
  ARMS,
  HEAD_AND_HANDS,
  FULL_BODY
}

@enduml