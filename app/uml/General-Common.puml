@startuml
left to right direction
interface "Метод розпізнання"
abstract class "Нейроні Мережі"
abstract class "Розпізнавач"
abstract class "Гра"
abstract class "Дактильна гра"
abstract class "Жестова гра"
abstract class "Карткова гра"

class  Оцінювач {
    Оцінка оцінити(ВихіднийСигнал сигнал)
}

class Налаштування {
    налаштуванняМетоду(Метод метод)
    налаштуватиСкладність(Гра гра)
}

class  "Результат дії \n користувача" as result{
    додатиОцінювач(Оцінювач оцінювач);
    видалитиОцінювач(Оцінювач оцінювач);
    сповістити()
}

class Статистика {
    зібрати( Оцінка оцінка)
}



Статистика <|-- "Статистика Гри"
Статистика <|-- "Статистика Методу"



"Метод розпізнання"  <|-- "Нейроні Мережі"
"Метод розпізнання" <|-- КінцевийАвтомат

"Нейроні Мережі" <|-- "GRU метод"
"Нейроні Мережі" <|-- "RNN метод"
"Нейроні Мережі" <|-- "TGCN метод"

"Розпізнавач" *-- "Метод розпізнання"


"Розпізнавач" "1" --> "n" "Вихідний сигнал":Видає

"Розпізнавач" <|-- "Розпізнавач дактилів"
"Розпізнавач" <|-- "Розпізнавач жестів"
"Розпізнавач" <|-- "Розпізнавач карток"

"Гра" "1" *-- "n" "Розпізнавач"

() "1-1"
() "1-2"
"Гра" <|-- "1-1"



"Жестова гра" <|-- circle1

"Жестова гра"  <|-- "Розповідь казок"
"Жестова гра"  <|-- "Гра в асоциації"
"Карткова гра"  <|-- "Гра пари"
"Дактильна гра"  <|-- "Гра алфавіт"

"Оцінювач" o-- Гра
"Оцінювач"--o  "Вихідний сигнал"
"Вихідний сигнал" --|> result

"Розпізнавач" <.. "Вхідний сигнал": розпізнається

Оцінювач o-- Оцінка
"Вхідний сигнал" --o Гра

Статистика --o Оцінювач
Статистика <-- СтатисничнийЗапис
Гра <.. Налаштування: змінює складність гри, обирає доступність
"Метод розпізнання" <.. Налаштування: змінює метод для розпізнання у грі

@enduml